# -*- coding: utf-8 -*-
"""PI - Trabalho Final

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Y38xBskaixhliiSK37mb3A1WI3aO39Ha
"""

from matplotlib import pyplot as plt
import pandas as pd
import seaborn as sns
import plotly.express as px

df = pd.read_csv("nuclear.csv")
df

df.shape

df.columns

df.describe()

df.info()

df.isnull().sum()

df.duplicated().sum()

df.dtypes

df.head()

df['Date'] = df['Date'].astype('datetime64[ns]')

df.rename(columns={"INES\nlevel": "INES LEVEL"},inplace = True)

print('Pontos Vermelhos marcam lugares com aciedentes nucleares\n')
fig = px.scatter_mapbox(data_frame=df,lat="Latitude", lon="Longitude", hover_name="Location ", hover_data=['Date',"Incident","INES LEVEL"],
                        color_discrete_sequence=["red"], zoom=1, height=700,title = 'Nuclear Plant Incidents')
fig.update_layout(mapbox_style="open-street-map")
fig.update_traces(marker=dict(size=10))
fig.update_layout(margin={"r":0,"t":0,"l":0,"b":0})
fig.show()

fig = px.bar(df_mortes, x='Location', y=['Numbers of Direct Deaths', 'Numbers of InDirect Deaths'],
             title='Mortes Diretas e Indiretas por Localização',
             labels={'value': 'Número de Mortes', 'variable': 'Tipo de Morte'},
             color_discrete_map={'Numbers of Direct Deaths': 'blue', 'Numbers of InDirect Deaths': 'orange'},
             barmode='stack')  # Modo empilhado

df['Date'] = pd.to_datetime(df['Date'])
ocorrencias_por_data = df['Date'].value_counts().sort_index()

plt.figure(figsize=(12, 6))
sns.lineplot(ocorrencias_por_data.index, ocorrencias_por_data.values, marker='o')
plt.title('Ocorrências por Data')
plt.xlabel('Data')
plt.ylabel('Número de Ocorrências')
plt.grid(True)
plt.show()

sns.boxplot(x=df['Latitude'])
sns.set_theme(style="ticks", palette="pastel")

fig = px.bar(df, x='Category', color='INES LEVEL', title='Ocorrências por Categoria e INES Level',
             labels={'Category': 'Categoria', 'INES LEVEL': 'INES Level', 'count': 'Número de Ocorrências'},
             height=500)
fig.show()

df_mortes_indiretas = df.dropna(subset=['Numbers of InDirect Deaths'])

fig = px.bar(df_mortes_indiretas, x='INES\nlevel', y='Numbers of InDirect Deaths',
             title='Mortes Indiretas por INES Level',
             labels={'INES LEVEL': 'INES Level', 'Numbers of InDirect Deaths': 'Número de Mortes Indiretas'},
             color='INES\nlevel',
             color_discrete_map={'1': 'blue', '2': 'green', '3': 'yellow', '4': 'orange', '5': 'red', '6': 'purple', '7': 'brown'},
             height=350, width = 600
             )
fig.show()

df_mortes_indiretas = df.dropna(subset=['Numbers of Direct Deaths'])

fig = px.bar(df_mortes_indiretas, x='INES\nlevel', y='Numbers of Direct Deaths',
             title='Mortes diretas por INES Level',
             labels={'INES LEVEL': 'INES Level', 'Numbers of Direct Deaths': 'Número de Mortes diretas'},
             color='INES\nlevel',
             color_discrete_map={'1': 'blue', '2': 'green', '3': 'yellow', '4': 'orange', '5': 'red', '6': 'purple', '7': 'green'},
             height=750, width = 600)

fig.update_layout(
    xaxis=dict(showgrid=True, gridwidth=1, gridcolor='LightGray'),
    yaxis=dict(showgrid=True, gridwidth=1, gridcolor='LightGray'))

fig.show()

df_mortes_indiretas = df.dropna(subset=['Numbers of InDirect Deaths'])


fig = px.bar(df_mortes_indiretas, x='Location ', y='Numbers of InDirect Deaths',
             title='Número de Mortes Indiretas por Localização',
             labels={'Numbers of InDirect Deaths': 'Número de Mortes Indiretas'},
             height=1200, width = 900)

fig.show()